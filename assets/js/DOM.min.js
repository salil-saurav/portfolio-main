document.addEventListener('DOMContentLoaded', () => { const lazyImages = document.querySelectorAll('img.lazyload'); if (lazyImages.length === 0) return; const loadImage = (img) => { const src = img.dataset.src; if (!src) { console.error('Lazy image is missing the data-src attribute:', img); return; } const tempImg = new Image(); tempImg.src = src; tempImg.onload = () => { img.src = src; img.classList.remove('lazyload'); img.classList.add('lazyloaded'); }; }; if ('IntersectionObserver' in window) { const observerOptions = { root: null, rootMargin: '0px', threshold: 0.1 }; const observer = new IntersectionObserver((entries, obs) => { entries.forEach(entry => { if (entry.isIntersecting) { loadImage(entry.target); obs.unobserve(entry.target); } }); }, observerOptions); lazyImages.forEach(img => observer.observe(img)); } else { lazyImages.forEach(img => loadImage(img)); } });